<?xml version="1.0" encoding="UTF-8"?>
<!-- status=debug 可以查看log4j的装配过程，monitorInterval运行时，动态重新加载log4j2配置文件的间隔时间，单位秒 -->
<configuration status="info" monitorInterval="3600">
	<Appenders>
		<!-- 定义控制台输出 -->
		<Console name="console" target="SYSTEM_OUT" follow="true">
			<Filters>
				<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>
			<PatternLayout pattern="[console] %date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%c{1}:%L] - %msg%n" />
		</Console >
		<!-- 默认日志 -->
		<RollingRandomAccessFile name="default" immediateFlush="true" append="true" fileName="/data/ftp/log/${env}/yt-sync/sync.log" filePattern="/data/ftp/log/${env}/yt-sync/sync_%d{yyyy-MM-dd}.log">
			<PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %p [%t] [%c{1}:%L] - %msg%n" />
			<Policies>
				<!-- TimeBased Triggering Policy 基于时间的触发策略。该策略主要是完成周期性的log文件封存工作。有两个参数：
					interval，integer型，指定两次封存动作之间的时间间隔。单位:以日志的命名精度来确定单位，比如上面的filePattern中的yyyy-MM-dd-HH 单位为小时，yyyy-MM-dd-HH-mm 单位为分钟
					modulate，boolean型，说明是否对封存时间进行调制。若modulate=true，则封存时间将以0点为边界进行偏移计算。
					比如，modulate=true，interval=4hours，那么假设上次封存日志的时间为03:00，则下次封存日志的时间为04:00，之后的封存时间依次为08:00，12:00，16:00，。。。-->
				<TimeBasedTriggeringPolicy interval="1" modulate="true" />
			</Policies>
		</RollingRandomAccessFile>

		<!-- 失败日志 -->
		<RollingRandomAccessFile name="error" immediateFlush="true" append="true" fileName="/data/ftp/log/${env}/yt-sync/sync_error.log" filePattern="/data/ftp/log/${env}/yt-sync/sync_error_%d{yyyy-MM-dd}.log">
			<Filters>
				<ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>
			</Filters>
			<PatternLayout pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %p [%t] [%c{1}:%L] - %msg%n" />
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" modulate="true" />
			</Policies>
		</RollingRandomAccessFile>
	</Appenders>

	<Loggers>
		<Root level="info"> <!-- 全局配置 -->
			<AppenderRef ref="console" />
			<AppenderRef ref="default" />
			<AppenderRef ref="error" />
		</Root>

		<asyncLogger name="com.alibaba.dubbo" additivity="false" level="info" includeLocation="true">
			<AppenderRef ref="console" />
			<AppenderRef ref="default" />
			<appender-ref ref="error" />
		</asyncLogger>

	</Loggers>

</configuration>